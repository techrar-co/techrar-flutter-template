// This file is "city.dart"
import 'package:freezed_annotation/freezed_annotation.dart';

import '../../../core/localization/constants.dart';

// required: associates our `city.dart` with the code generated by Freezed
part 'city.freezed.dart';
// optional: Since our City class is serializable, we must add this line.
// But if City was not serializable, we could skip it.
part 'city.g.dart';

@freezed
class City with _$City {
  const City._();
  const factory City({
    @JsonKey(name: "id") required int id,
    @JsonKey(name: "created_at") required DateTime createdAt,
    @JsonKey(name: "modified_at") required DateTime modifiedAt,
    @JsonKey(name: "ordering") required int ordering,
    @JsonKey(name: "name_en") required String nameEn,
    @JsonKey(name: "name_ar") required String nameAr,
    @JsonKey(name: "country_code") required String? countryCode,
    @JsonKey(name: "keywords") required String? keywords,
    @JsonKey(name: "is_supported") required bool? isSupported,
  }) = _City;

  factory City.fromJson(Map<String, Object?> json) => _$CityFromJson(json);

  String get name => isArabic() ? nameAr : nameEn;
}
